<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
        xmlns:p="http://www.springframework.org/schema/p"
 		xmlns:tx="http://www.springframework.org/schema/tx" 
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd 
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">

    <mvc:annotation-driven />
    
    <context:component-scan base-package="eStoreProduct" />
    <context:component-scan base-package="eStoreProduct.controller" />

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="driverClassName" value="org.postgresql.Driver" />
	    <property name="url" value="jdbc:postgresql://LocalHost:5432/postgres" />
	    <property name="username" value="postgres" />
	    <property name="password" value="Akshaya@2001" />
	</bean>

	 <bean id="entityManagerFactory" 
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          p:packagesToScan="eStoreProduct.model"
          p:dataSource-ref="dataSource">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
				<property name="showSql" value="true" />
			</bean>
		</property>
	</bean>

	<!-- Transactions -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<!-- enable the configuration of transactional behavior based on annotations -->
	
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- byName example -->
    <bean id="customerdao" class="eStoreProduct.DAO.customerDAOImp" autowire="byName"/> 
    
    
    
    <!-- byName example -->
    <bean id="cartdao" class="eStoreProduct.DAO.cartDAOImp" autowire="byName"/> 
    
    
        <!-- byName example -->
    <bean id="admindao" class="eStoreProduct.DAO.adminDAOImp" autowire="byName"/> 
    
    <!-- byName example -->
    <bean id="ord" class="eStoreProduct.DAO.OrderDAOImp" autowire="byName"/> 
    
     <!-- byName example -->
    <bean id="omd" class="eStoreProduct.model.orderModel" autowire="byName"/> 
    
    
    
    <!-- Configure the ProductDAO bean -->
    <bean id="productDAO" class="eStoreProduct.DAO.ProductDAO" />
    <bean id="catDAO" class="eStoreProduct.DAO.CategoryDAO" />
    
    

    <!-- Configure the ProductService bean -->
    <bean id="productService" class="eStoreProduct.ProductsService.ProductService">
        <constructor-arg ref="productDAO" />
    </bean>
    <bean id="catService" class="eStoreProduct.ProductsService.CategoryService">
        <constructor-arg ref="catDAO" />
    </bean>
    
</beans>